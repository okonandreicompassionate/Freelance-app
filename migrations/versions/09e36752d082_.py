from alembic import op
import sqlalchemy as sa
"""empty message

Revision ID: 09e36752d082
Revises: 
Create Date: 2025-04-09 11:59:11.772246

"""



# revision identifiers, used by Alembic.
revision = '09e36752d082'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('user',
    # sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('user_fname', sa.String(length=100), nullable=False),
    # sa.Column('user_lname', sa.String(length=100), nullable=False),
    # sa.Column('user_email', sa.String(length=100), nullable=False),
    # sa.Column('user_type', sa.Enum('freelancer', 'client', name='user_type_enum'), nullable=False),
    # sa.Column('user_pwd', sa.String(length=200), nullable=False),
    # sa.Column('created_at', sa.DateTime(), nullable=True),
    # sa.Column('updated_at', sa.DateTime(), nullable=True),
    # sa.PrimaryKeyConstraint('user_id'),
    # sa.UniqueConstraint('user_email')
    # )
    # op.create_table('client_profile_table',
    # sa.Column('client_profile_id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.Column('business_name', sa.String(length=100), nullable=False),
    # sa.Column('industry', sa.String(length=100), nullable=False),
    # sa.Column('hiring_needs', sa.String(length=500), nullable=False),
    # sa.Column('updated_at', sa.DateTime(), nullable=True),
    # sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    # sa.PrimaryKeyConstraint('client_profile_id')
    # )
    op.create_table('freelancer_profile_table',
    sa.Column('freelancer_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skills', sa.String(500), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=False),
    sa.Column('about_me', sa.String(500), nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=False),
    sa.Column('reviews_count', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('freelancer_id')
    )
    op.create_table('jobs',
    sa.Column('jobs_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('required_skills', sa.Text(), nullable=False),
    sa.Column('budget', sa.Float(), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'success', 'failed', name='job_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('jobs_id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Enum('pending', 'read', 'failed', name='message_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('job_applications_table',
    sa.Column('job_applications_table_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('jobs_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proposal', sa.String(length=500), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jobs_id'], ['jobs.jobs_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('job_applications_table_id')
    )
    op.create_table('reviews',
    sa.Column('reviews_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('jobs_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('reviewee_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jobs_id'], ['jobs.jobs_id'], ),
    sa.ForeignKeyConstraint(['reviewee_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('reviews_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('job_applications_table')
    op.drop_table('messages')
    op.drop_table('jobs')
    op.drop_table('freelancer_profile_table')
    op.drop_table('client_profile_table')
    op.drop_table('user')
    # ### end Alembic commands ###
